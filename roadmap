[URGENT]
  - Add proper filesystem abstraction:
      I was thinking to make it all self-contained and 
      make the games able to write to themselves, but 
      I also considered some sort of filesystem system
      that also allowed people to write into "catridges"
      which had limited space, similar to the PS1 memory
      slot thingies.
      I was thinking to support formats such as ZIP, as 
      it's simple to understand in all major platforms.

  - Add fully agnostic input system:
      An input system that would give us the exact same
      format and APIs in all main platforms, with all main
      input methods (No touch planned, though, sorry.)

  - Add simple audio system:
      An audio system capable of reading audio files and
      playing them in real time, probably multithreaded.

  - [LONG TERM] Hyper-Batched Call-Reduced rendering:
      Came up with this idea of making all the matrix
      transformations in the CPU, then accumulating into
      the buffer as much as possible without rendering
      Then just give the users the knowledge of how to 
      be optimal, kind of like how old game consoles had
      tricks up their sleeves to be efficient.
      Maybe I should just tell them to implement batching
      themselves, which I think would be cool too but uhh
      it's also kinda boring.

[COOL IDEAS]
  - Add a cool splash showcasing features:
      Something like LÃ¶ve's cutesy splashes, but with 3D
      and all sorts of cool little features.
      Probably written in C through the internal API.
      Could probably serve as a setup and bootup menu?.

[IN THE DRAWING BOARD]
  - Meson files:
      I am unsure about Meson yet and I dont really want 
      to mantain it, unless it's for Flatpak-related stuff.
      I would rather just have a tool for packing games 
      built into the game engine somehow.

  - Model editor:
      Kinda like pico-cad if it had a proper resolution,
      It would be written in C and it would use SECRET FEATURES!
      (yes, that sounds like horrible design and it truly is.)

  - More languages:
      I am not entirely sure about this one, I dont want 
      to end with TIC-80, but I theoretically could...
      I guess time will say.